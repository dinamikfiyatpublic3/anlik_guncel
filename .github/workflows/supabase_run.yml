name: supabase_timestamp_update

on:
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest

    env:
      PG_CONNECTION_STRING_BASE: ${{ secrets.PG_CONNECTION_STRING_BASE }}
      PG_SUPABASEURL: ${{ secrets.PG_SUPABASEURL }}
      PG_SUPABASEKEY: ${{ secrets.PG_SUPABASEKEY }}
      PG_PROXYPORT: ${{ secrets.PG_PROXYPORT }}
      PG_PROXYUSERNAME: ${{ secrets.PG_PROXYUSERNAME }}
      PG_PROXYPASSWORD: ${{ secrets.PG_PROXYPASSWORD }}
      PROXY_IP: ${{ secrets.PROXY_IP }}
      PROXY_PORT: ${{ secrets.PROXY_PORT }}
      PROXY_USER: ${{ secrets.PROXY_USER }}
      PROXY_PASS: ${{ secrets.PROXY_PASS }}
      PG_SCRPEANT: ${{ secrets.PG_SCRPEANT }}
      PG_DB_USER: ${{ secrets.PG_DB_USER }}
      PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
      PG_HOST: ${{ secrets.PG_HOST }}
      PG_PORT: ${{ secrets.PG_PORT }}
      PG_NAME: ${{ secrets.PG_NAME }}
      PG_VIEW_NAME: ${{ secrets.PG_VIEW_NAME }}
      PG_PROXYRACK_USERNAME: ${{ secrets.PG_PROXYRACK_USERNAME }}
      PG_PROXYRACK_PASSWORD: ${{ secrets.PG_PROXYRACK_PASSWORD }}
      MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }} 
      NODE_OPTIONS: --unhandled-rejections=strict

    strategy:
      matrix:
        script: [ 
          "tests/supabase_run.mjs"
        ]

    steps:
      - name: Check if user is authorized
        if: github.actor != github.repository_owner
        run: |
          echo "‚ùå Unauthorized user: ${{ github.actor }}"
          exit 1

      - name: Check out code
        uses: actions/checkout@v4

      - name: List directory contents
        run: |
          echo "üìÇ Listing directory contents:"
          ls -R

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable

      - name: Run scraper
        run: |
          echo "Running scraper: ${{ matrix.script }}"
          node "./${{ matrix.script }}"
